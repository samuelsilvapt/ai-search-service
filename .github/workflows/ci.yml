name: CI / CD

on:
  push:
    branches: [ main, production ]
    tags:     [ 'v*' ]          # optional version tags

jobs:
  # ─────────────── CI ───────────────
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci

  # ─── Push HEAD of main ➜ production branch ───
  promote:
    if: github.ref == 'refs/heads/main'
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Push to production branch
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git push --force origin HEAD:production

  # ─────────────── Build & Push Docker ───────────────
  docker:
    needs: install
    if: github.ref == 'refs/heads/production' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image version
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=production-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build & push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.VERSION }}
            ghcr.io/${{ github.repository }}:latest

      - name: Show image URL
        run: echo "Docker image ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.VERSION }}"
